set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Detect # of CPUs so make jobs can be parallelized
CPUS=$(grep -c ^processor /proc/cpuinfo)
 # Available variables
# $BOSH_COMPILE_TARGET - where this package & spec'd source files are available
# $BOSH_INSTALL_TARGET - where you copy/install files to be included in package
export HOME=/var/vcap
export PKG_CONFIG_PATH=${BOSH_INSTALL_TARGET}/lib/pkgconfig
export LD_LIBRARY_PATH=${BOSH_INSTALL_TARGET}/lib
export INCLUDE_PATH=${BOSH_INSTALL_TARGET}/include
export LDFLAGS=-L${LD_LIBRARY_PATH}
export CPPFLAGS=-I${INCLUDE_PATH}
export PATH=${PATH}:${BOSH_INSTALL_TARGET}/bin:${BOSH_INSTALL_TARGET}/sbin

# (cd blobs/tshark ; curl -LSsO ftp://sourceware.org/pub/libffi/libffi-3.3.tar.gz)
tar -xzf tshark/libffi-3.3.tar.gz
(cd libffi-3.3
 ./configure --prefix ${BOSH_INSTALL_TARGET} --disable-builddir && \
 make -j${CPUS} && \
 make install) || exit 1

# (cd blobs/tshark ; curl -LSsO http://ftp.gnome.org/pub/GNOME/sources/glib/2.45/glib-2.71.0.tar.xz)
tar -xJf tshark/glib-2.71.0.tar.xz
(cd glib-2.71.0/
 ./configure --prefix ${BOSH_INSTALL_TARGET} && \
 make -j${CPUS} && \
 make install) || exit 1

# (cd blobs/tshark ; curl -LSsO http://www.tcpdump.org/release/libpcap-1.10.1.tar.gz)
tar -xzf tshark/libpcap-1.10.1.tar.gz
(cd libpcap-1.10.1
 ./configure --prefix ${BOSH_INSTALL_TARGET} && \
 make -j${CPUS} && \
 make install) || exit 1

# (cd blobs/tshark ; curl -LSsO https://2.na.dl.wireshark.org/src/wireshark-3.6.1.tar.xz)
tar -xf tshark/wireshark-3.6.1.tar.xz
(cd wireshark-3.6.1
 ./configure --prefix ${BOSH_INSTALL_TARGET} \
   --disable-wireshark \
   --disable-randpkt && \
 make -j${CPUS} && \
 make install) || exit 1
